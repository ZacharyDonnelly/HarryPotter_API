type Query {
  """
  Get a specific character by ID (Characters who don't have a recorded house will not be stored)
  """
  character(id: ID): Character
  """
  Get the list of all characters (Characters who don't have a recorded house will not be stored)
  """
  characters(filter: FilterCharacter): Characters
  """
  Get the specified house by name
  """
  house(name: String!): House
}
type Characters {
  results: [Character]
}

type Character {
  id: ID!
  """
  The name of the character.
  """
  name: String
  """
  The house in which the character is part of (Gryffindor, Slytherin, Hufflepuff, Ravenclaw).
  """
  house: House
  """
  The gender of the character.
  """
  gender: String
}

type House {
  """
  The house in which the character is part of (Gryffindor, Slytherin, Hufflepuff, Ravenclaw).
  """
  name: String
  """
  Get the list of all characters that are part of specified house
  """
  characters: [Character]
}

input FilterCharacter {
  name: String
  actor: String
  house: String
  gender: String
}
