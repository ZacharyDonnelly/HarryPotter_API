type Query {
  """
  Get a specific character by name.
  """
  character(name: String!): Character
  """
  Get the list of all characters ~ I would avoid filtering by actor for now until all records are fully populated with correct actor.
  """
  characters(page: Int, filter: FilterCharacter): [Character]
  """
  Get the specified Hogwarts house by name.
  """
  house(name: String!): House
  """
  Get all Hogwarts houses.
  """
  houses: [House]
}

type Character {
  id: ID
  """
  The name of the character.
  """
  name: String
  """
  The house in which the character is part of: Gryffindor, Slytherin, Hufflepuff or Ravenclaw. If the character does not have a house on record or is a muggle, than thier house will reflect that and come back as Unknown or Muggle.
  """
  house: House
  """
  The gender of the character.
  """
  gender: String
  """
  The actor who played the character. (Some character's actors may not have been aggregated yet.)
  """
  actor: String
}

type House {
  id: ID
  """
  The name of the house in which the characters are part of: Gryffindor, Slytherin, Hufflepuff or Ravenclaw. Characters who do not have a recorded house will be stored as Unknown, while others will be stored under Muggle.
  """
  name: String
  """
  Get the list of all characters that are part the of specified house.
  """
  characters: [Character]
}

input FilterCharacter {
  house: String
  gender: String
  actor: String
}
